//
//  InDetailScreenViewController.swift
//  FinPro
//
//  Created by дэвид Кихтенко on 23.09.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InDetailScreenDisplayLogic: AnyObject {
    func displaySomething(viewModel: InDetailScreen.Something.ViewModel)
}

final class InDetailScreenViewController: UIViewController, InDetailScreenDisplayLogic {
    
    var interactor: InDetailScreenBusinessLogic?
    var router: InDetailScreenRouter?
    
    init(interactor: InDetailScreenBusinessLogic,
         presenter: InDetailScreenPresentationLogic) {
        super.init(nibName: nil, bundle: nil)
        
        interactor.presenter = presenter
        self.interactor = interactor
        
        presenter.viewController = self
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
        
        setupUI()
    }
    
    private lazy var scrollView: UIScrollView = {
        let scrollView = UIScrollView()
        scrollView.contentSize = CGSize(width: view.frame.width, height: 900)
        //    FIXME: remove hardcode value
        scrollView.translatesAutoresizingMaskIntoConstraints = false
        return scrollView
    }()
    
    private lazy var image: UIImageView = {
        let image = UIImageView()
        image.image = UIImage(systemName: "apple.terminal.fill")
        image.translatesAutoresizingMaskIntoConstraints = false
        return image
    }()
    
    private lazy var viewForGraph: UIView = {
        let viewForGraph = UIView()
        viewForGraph.backgroundColor = .lightGray
        viewForGraph.translatesAutoresizingMaskIntoConstraints = false
        return viewForGraph
    }()
    
    @objc
    private func goToSecondScreen() {
        
    }
    
    private func setupUI() {
        view.backgroundColor = .systemBackground
        title = "Bitcoin"
        
        view.addSubview(scrollView)
        scrollView.addSubview(image)
        scrollView.addSubview(viewForGraph)
        
        NSLayoutConstraint.activate([
            scrollView.topAnchor.constraint(equalTo: view.topAnchor),
            scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            
            image.widthAnchor.constraint(equalToConstant: 70),
            image.heightAnchor.constraint(equalToConstant: 70),
            image.topAnchor.constraint(equalTo: scrollView.topAnchor, constant: -60),
            image.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            viewForGraph.topAnchor.constraint(equalTo: scrollView.topAnchor, constant: 50),
            viewForGraph.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            viewForGraph.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            viewForGraph.heightAnchor.constraint(equalToConstant: 200)
        ])
    }
    
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething() {
        let request = InDetailScreen.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: InDetailScreen.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}
